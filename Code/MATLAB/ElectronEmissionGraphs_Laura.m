% This script estimates the current generated by electron emission
% through thermionic emission within a vacuum chamber by sweeping some of
% its parameters

%{

Function parameters:

'CatTemp' -> Cathode temperature (K)
'Vp' -> Anode voltage (V)
'Vg' -> Grid voltage (V)
'CoilLength' -> Cathode filament length (m)
'CatToAnDist' -> Distance from the cathode to the anode (m)

%}


Vs=6; % Cathode voltage
dg=0.01; % Grid to anode distance

T = linspace(293.15,2500, 1000);
%I=TheEmEffCurr('CatTemp', T);

Vp=linspace(Vs, 900, 1000);
%I=TheEmEffCurr('Vp', Vp);

Vg=linspace(Vs, 2000, 1000);
%I=TheEmEffCurr('Vg', Vg);

CL=linspace(0.01, 5, 1000);
%I=TheEmEffCurr('CoilLength', CL);

d=linspace(dg+0.001, 0.5, 1000);
I=TheEmEffCurr('CatToAnDist', d);

Vg=linspace(Vs, 2000, 1000);
%I=TheEmEffCurr('VpAndVg',Vg);







%%

function I_effective=TheEmEffCurr(parameter, value)

    % Physical Constants
    k = 8.617e-5; % Boltzmann constant (eV/K)
    A_Richardson = 120; % Richardson constant (A/cm^2/K^2) for tungsten
    phi = 4.5; % Work function of tungsten (eV)
    e = 1.6e-19; % Elementary charge (C)
    m = 9.11e-31; % Electron mass (kg)
    epsilon_0 = 8.85e-12; % Vacuum permittivity (F/m)
    sigma = 1e-19; % Estimated collision cross-section (m^2)
    
    % Experimental Parameters
    T = 2500; % Temperature of the cathode (K)
    Vs = 6; % Voltage applied to the cathode (V)
    Vp = 600; % Voltage applied to the anode (V)
    Vg = 1000; % Voltage applied to the grid (V)
    dg = 0.01; % Distance from the grid to the anode (m), from 0 to d
    d = 0.05; % Distance between cathode and anode (m)
    p_torr=1e-5; % Pressure in the vacuum chamber (Torr)
    p = p_torr*133.3; % Pressure in the vacuum chamber (Pa)
    D = 0.0005; % Diameter of the tungsten filament (m)
    L = 0.5; % Length of the tungsten filament (m)

    parameter_array={'CatTemp', 'Vp', 'Vg', 'CoilLength', 'CatToAnDist', 'VpAndVg'};
    if ~ismember(parameter, parameter_array)
        disp('Invalid parameter name');
    elseif length(value)<1
        disp('The parameter value must be an array with a length larger than 0')
    else
        I_effective=zeros(1, length(value));
        switch parameter
            case parameter_array{1}
                T=value;
                A_cathode = pi * D * L; % Surface area of the cylindrical filament (m^2)
                E=(Vg-Vs)/(d-dg)+(Vp-Vs)/d;
                delta_phi=sqrt(e*E/(4*pi*epsilon_0));
                I_space_charge = (4 * epsilon_0 / 9) * sqrt(2 * e / m) * A_cathode * ((Vg-Vs)^(3/2) / (d-dg)^2 + (Vp-Vs)^(3/2) / d^2);
                for n=1:length(T)
                    J = A_Richardson * T(n)^2 * exp(-(phi-delta_phi) / (k * T(n))); % Current density (A/m^2)
                    I_emission(n) = J * A_cathode; % Current emitted by thermionic emission (A)
                    mean_free_path = (k * T(n)) / (sqrt(2) * pi * sigma * p);
                    collision_factor = exp(-d / mean_free_path);
                    I_effective(n) = min(I_emission(n), I_space_charge) * collision_factor;
                end
                
                figure
                hold on
                %plot(T, I_emission*1000, 'LineWidth',2,'Color','#0072BD');
                %plot(T, repelem(I_space_charge,length(value))*1000, 'LineWidth',2,'Color','#D95319')
                plot(T, I_effective*1000, 'LineWidth',2)
                hold off
                grid("minor"),grid("on")
                xlim([T(1) T(end)])
                %legend ('Total emitted current', 'Effective current')
                xlabel("Cathode temperature (K)"),ylabel("Emitted current (mA)");


            case parameter_array{2}
                Vp=value;
                A_cathode = pi * D * L; % Surface area of the cylindrical filament (m^2)
                mean_free_path = (k * T) / (sqrt(2) * pi * sigma * p);
                collision_factor = exp(-d / mean_free_path);
                for n=1:length(Vp)
                    E=(Vg-Vs)/(d-dg)+(Vp(n)-Vs)/d;
                    delta_phi=sqrt(e*E/(4*pi*epsilon_0));
                    J = A_Richardson * T^2 * exp(-(phi-delta_phi) / (k * T)); % Current density (A/m^2)
                    I_emission = J * A_cathode; % Current emitted by thermionic emission (A)
                    I_space_charge = (4 * epsilon_0 / 9) * sqrt(2 * e / m) * A_cathode * ((Vg-Vs)^(3/2) / (d-dg)^2 + (Vp(n)-Vs)^(3/2) / d^2);
                    I_effective(n) = min(I_emission, I_space_charge) * collision_factor;
                end
                figure
                plot(Vp, I_effective*1000, 'LineWidth',2,'Color','#0072BD');
                grid("minor"),grid("on")
                %ylim([0 1e-1])
                xlabel("Anode voltage (V)"),ylabel("Emitted current (mA)")


            case parameter_array{3}
                Vg=value;
                A_cathode = pi * D * L; % Surface area of the cylindrical filament (m^2)
                mean_free_path = (k * T) / (sqrt(2) * pi * sigma * p);
                collision_factor = exp(-d / mean_free_path);
                    for n=1:length(Vg)
                        E=(Vg(n)-Vs)/(d-dg)+(Vp-Vs)/d;
                        delta_phi=sqrt(e*E/(4*pi*epsilon_0));
                        J = A_Richardson * T^2 * exp(-(phi-delta_phi) / (k * T)); % Current density (A/m^2)
                        I_emission = J * A_cathode; % Current emitted by thermionic emission (A)
                        I_space_charge = (4 * epsilon_0 / 9) * sqrt(2 * e / m) * A_cathode * ((Vg(n)-Vs)^(3/2) / (d-dg)^2 + (Vp-Vs)^(3/2) / d^2);
                        I_effective(n) = min(I_emission, I_space_charge) * collision_factor;
                    end
                figure
                plot(Vg, I_effective*1000, 'LineWidth',2,'Color','#0072BD');
                grid("minor"),grid("on")
                %ylim([0 1e-1])
                xlabel("Grid voltage (V)"),ylabel("Emitted current (mA)")


            case parameter_array{4}
                L=value;
                E=(Vg-Vs)/(d-dg)+(Vp-Vs)/d;
                delta_phi=sqrt(e*E/(4*pi*epsilon_0));
                J = A_Richardson * T^2 * exp(-(phi-delta_phi) / (k * T)); % Current density (A/m^2)
                mean_free_path = (k * T) / (sqrt(2) * pi * sigma * p);
                collision_factor = exp(-d / mean_free_path);
                for n=1:length(L)
                    A_cathode = pi * D * L(n);
                    I_emission = J * A_cathode; % Current emitted by thermionic emission (A)
                    I_space_charge = (4 * epsilon_0 / 9) * sqrt(2 * e / m) * A_cathode * ((Vg-Vs)^(3/2) / (d-dg)^2 + (Vp-Vs)^(3/2) / d^2);
                    I_effective(n) = min(I_emission, I_space_charge) * collision_factor;
                end
                figure
                plot(L, I_effective*1000, 'LineWidth',2,'Color','#0072BD');
                grid("minor"),grid("on")
                %ylim([0 1e-1])
                xlabel("Filament length (m)"),ylabel("Emitted current (mA)")

            case parameter_array{5}
                d=value;
                A_cathode = pi * D * L;
                mean_free_path = (k * T) / (sqrt(2) * pi * sigma * p);
                for n=1:length(d)
                    E=(Vg-Vs)/(d(n)-dg)+(Vp-Vs)/d(n);
                    delta_phi=sqrt(e*E/(4*pi*epsilon_0));
                    J = A_Richardson * T^2 * exp(-(phi-delta_phi) / (k * T)); % Current density (A/m^2)
                    I_emission = J * A_cathode; % Current emitted by thermionic emission (A)
                    I_space_charge(n) = (4 * epsilon_0 / 9) * sqrt(2 * e / m) * A_cathode * ((Vg-Vs)^(3/2) / (d(n)-dg)^2 + (Vp-Vs)^(3/2) / d(n)^2);
                    collision_factor = exp(-d(n) / mean_free_path);
                    I_effective(n) = min(I_emission, I_space_charge(n)) * collision_factor;
                end
                figure
                hold on
                plot(d, I_effective*1000, 'LineWidth',2,'Color','#0072BD');
                plot(d, I_space_charge*1000, 'LineWidth',2,'Color','#D95319','LineStyle','--');
                hold off
                grid("minor"),grid("on")
                ylim([0.2 0.6])
                legend('Effectively emitted current','Space charge current', 'Location','southwest')
                xlabel("Cathode to anode distance (m)"),ylabel("Emitted current (mA)")


            case parameter_array{6}
                Vp=linspace(Vs, 150, 5);
                Vg=value;
                I_effective=zeros([length(Vp), length(Vg)]);
                A_cathode = pi * D * L;
                mean_free_path = (k * T) / (sqrt(2) * pi * sigma * p);
                collision_factor = exp(-d / mean_free_path);
                figure
                hold on
                for t=1:length(Vp)
                    for n=1:length(Vg)
                        E=(Vg(n)-Vs)/(d-dg)+(Vp(t)-Vs)/d;
                        delta_phi=sqrt(e*E/(4*pi*epsilon_0));
                        J = A_Richardson * T^2 * exp(-(phi-delta_phi) / (k * T)); % Current density (A/m^2)
                        I_emission = J * A_cathode; % Current emitted by thermionic emission (A)
                        I_space_charge = (4 * epsilon_0 / 9) * sqrt(2 * e / m) * A_cathode * ((Vg(n)-Vs)^(3/2) / (d-dg)^2 + (Vp(t)-Vs)^(3/2) / d^2);
                        I_effective(t,n) = min(I_emission, I_space_charge) * collision_factor;
                    end
                    plot(Vg, I_effective(t,:)*1000, 'LineWidth',2);
                end
                hold off
                grid("minor"),grid("on")
                %ylim([0.2 0.6])
                legend(sprintf('Vp= %g', Vp(1)),sprintf('Vp= %g', Vp(2)),sprintf('Vp= %g', Vp(3)),sprintf('Vp= %g', Vp(4)),sprintf('Vp= %g', Vp(5)),'Location','best')
                xlabel("Grid voltage (V)"),ylabel("Emitted current (mA)")

            otherwise
                disp('Something went wrong')
                I_effective=0;
        end
    end

end